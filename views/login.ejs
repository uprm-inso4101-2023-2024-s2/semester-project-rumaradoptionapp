<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login</title>
    <style>
        body {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            background-image: url('https://www.uprm.edu/portales/wp-content/uploads/sites/55/2022/05/Tarzan_7896.png'); /* Specify the path to your image */
            background-size: contain; /* Cover the entire background */
            background-position: center; /* Center the background image */
            background-repeat: no-repeat; /* Prevent the background image from repeating */
        }

        .form-container {
            width: 300px; /* Adjust the width as needed */
            padding: 20px;
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
            text-align: center;
        }

        .form-group {
            margin-bottom: 15px;
        }

        .form-group label {
            display: block;
            margin-bottom: 5px;
            color: black; /* Optional: Set the label text color */
        }

        .form-group input {
            width: 100%;
            padding: 8px;
            border-radius: 4px;
            border: 1px solid #ccc;
            background-color: #66bb6a; /* Set the more lively green background color for smaller boxes */
            color: white; /* Set the text color for smaller boxes */
            box-sizing: border-box; /* Include padding and border in the element's total width and height */
        }

        .form-group input::placeholder {
            color: white; /* Set the placeholder text color to white */
        }

        .submit-btn {
            width: 100%;
            padding: 10px;
            background-color: white; /* Set the background color for the big box */
            color: black; /* Set the text color for the big box */
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        .submit-btn:hover {
            background-color: #ccc; /* Set the button background color on hover */
        }
    </style>
</head>
<body>
    <div class="form-container">
        <h2>Login</h2>
        <form id="loginForm" action="/login" method="post">
            <div class="form-group">
                <label for="name">Username:</label>
                <input type="text" id="username" name="username" placeholder="Enter your username" required autocomplete="off">
            </div>
            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" name="password" id="password" placeholder="password" required>
            </div>
            <div class="form-group">
                <input type="checkbox" id="rememberMe" name="rememberMe">
                <label for="rememberMe">Remember Me</label>
            </div>
            <button type="submit" class="submit-btn">Login</button>
        </form>
        <p>Don't have an account? <a href="/signup">Signup</a></p>
    </div>

    <script>
        window.onload = function() {
            const rememberMeCheckbox = document.getElementById('rememberMe');
            rememberMeCheckbox.checked = localStorage.getItem('rememberMeChecked') === 'true';

            if (rememberMeCheckbox.checked) {
                const rememberedUsername = localStorage.getItem('rememberedUsername');
                if (rememberedUsername) {
                    document.getElementById('username').value = rememberedUsername;
                }
                const rememberedPassword = localStorage.getItem('rememberedPassword');
                if (rememberedPassword) {
                    document.getElementById('password').value = rememberedPassword;
                }
            }

            rememberMeCheckbox.addEventListener('change', function() {
                localStorage.setItem('rememberMeChecked', this.checked);
                if (this.checked) {
                    localStorage.setItem('rememberedUsername', document.getElementById('username').value);
                    localStorage.setItem('rememberedPassword', document.getElementById('password').value);
                } else {
                    localStorage.removeItem('rememberedUsername');
                    localStorage.removeItem('rememberedPassword');
                }
            });
        };

        document.getElementById('loginForm').addEventListener('submit', async function(event) {
            event.preventDefault();
            const username = document.getElementById('username').value;
            const password = document.getElementById('password').value;
            const rememberMeCheckbox = document.getElementById('rememberMe');
            if (rememberMeCheckbox.checked) {
                localStorage.setItem('rememberedUsername', username);
                localStorage.setItem('rememberedPassword', password);
            } else {
                localStorage.removeItem('rememberedUsername');
                localStorage.removeItem('rememberedPassword');
            }

            // Here you would typically send your form data to a server
            const formData = { username, password };
            console.log("Form Data to send:", formData);
            
            // Example of handling the form submission
            // You would need to replace the URL '/login' with your actual login endpoint
            try {
                const response = await fetch('/login', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(formData),
                });

                if (response.ok) {
                    const data = await response.json();
                    // Handle success response
                    console.log(data);
                    // Redirect to another page or display a success message
                    // window.location.href = 'path_to_redirect_on_success';
                } else {
                    // Handle non-success responses
                    throw new Error('Network response was not ok.');
                }
            } catch (error) {
                console.error('Error during the fetch operation:', error);
                // Handle fetch error (e.g., display an error message)
            }
        });
    </script>
</body>
</html>

           
